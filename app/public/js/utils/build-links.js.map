{"version":3,"file":"build-links.js","sources":["../src/public/js/utils/build-links.js"],"sourcesContent":["const CSS_PATTERN = /\\.css$/i;\nconst JS_PATTERN = /\\.js$/i;\nconst CDN_ROOT = '//cdn.jsdelivr.net';\n\nexport default function (collection, groupLinks = true) {\n\tlet links = { js: [], css: [], other: [] };\n\n\tcollection.forEach((file) => {\n\t\tlet link = `${CDN_ROOT}/${file.project}/${file.version}/${file.name}`;\n\n\t\tif (CSS_PATTERN.test(file.name)) {\n\t\t\tlinks.css.push(link);\n\t\t} else if (JS_PATTERN.test(file.name)) {\n\t\t\tlinks.js.push(link);\n\t\t} else {\n\t\t\tlinks.other.push(link);\n\t\t}\n\t});\n\n\tif (!groupLinks) {\n\t\treturn links;\n\t}\n\n\treturn {\n\t\tjs: buildLink(collection, JS_PATTERN, links.js.length > 1),\n\t\tcss: buildLink(collection, CSS_PATTERN, links.css.length > 1),\n\t\tother: links.other,\n\t};\n}\n\nfunction buildLink (collection, filter, merge) {\n\tlet chunks = [];\n\tlet filtered = collection.filter(file => filter.test(file.name));\n\n\t// There is ony one file of this type; don't merge.\n\tif (!merge && filtered.length) {\n\t\treturn [ `${CDN_ROOT}/${filtered[0].project}/${filtered[0].version}/${filtered[0].name}` ];\n\t}\n\n\tgroupByProject(filtered).forEach((project) => {\n\t\tif (project.files.length) {\n\t\t\tlet link = `${project.name}@${project.version}`;\n\n\t\t\t// No need to create a list of files if there is only the main file.\n\t\t\tif (project.files.length !== 1 || project.files[0] !== project.mainfile) {\n\t\t\t\tlink += `(${project.files.join('+')})`;\n\t\t\t}\n\n\t\t\tchunks.push(link);\n\t\t}\n\t});\n\n\treturn chunks.length\n\t\t? [ `${CDN_ROOT}/g/${chunks.join(',')}` ]\n\t\t: [];\n}\n\nfunction groupByProject (collection) {\n\tlet projects = {};\n\n\tcollection.forEach((file) => {\n\t\tlet key = file.project + file.version;\n\n\t\tif (!projects[key]) {\n\t\t\tprojects[key] = {\n\t\t\t\tname: file.project,\n\t\t\t\tversion: file.version,\n\t\t\t\tmainfile: file.mainfile,\n\t\t\t\tfiles: [ file.name ],\n\t\t\t};\n\t\t} else {\n\t\t\tprojects[key].files.push(file.name);\n\t\t}\n\t});\n\n\treturn Object.keys(projects).map(key => projects[key]);\n}\n"],"names":[],"mappings":"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"}